// This file is generated by Umi automatically
// DO NOT CHANGE IT MANUALLY!
import useAppStore from '@/store/app';
import { Dropdown, Menu, version } from 'antd';
import { DropDownProps } from 'antd/es/dropdown';
import React from 'react';

export interface HeaderDropdownProps extends DropDownProps {
    overlayClassName?: string;
    placement?: 'bottomLeft' | 'bottomRight' | 'topLeft' | 'topCenter' | 'topRight' | 'bottomCenter';
}

const HeaderDropdown: React.FC<HeaderDropdownProps> = ({ overlayClassName: cls, ...restProps }) => (
    <Dropdown placement="bottom" overlayClassName={cls} {...restProps} />
);

interface SelectLangProps {
    onItemClick?: (params: any) => void;
    className?: string;
    reload?: boolean;
    icon?: React.ReactNode;
}

const defaultLangUConfigMap = [
    {
        lang: 'en_US',
        key: 'en_US',
        label: 'English',
        icon: 'üá∫üá∏',
        title: 'Language',
    },

    {
        lang: 'vi_VN',
        key: 'vi_VN',
        label: 'Ti·∫øng Vi·ªát',
        icon: 'üáªüá≥',
        title: 'Ng√¥n ng·ªØ',
    },
];

export const SelectLang: React.FC<SelectLangProps> = (props) => {
    const { onItemClick, ...restProps } = props;
    const { locale: selectedLang, setLocale } = useAppStore();

    const changeLang = ({ key }: any): void => {
        setLocale(key);
    };

    const handleClick = onItemClick ? (params: any) => onItemClick(params) : changeLang;

    const menuItemStyle = { minWidth: '160px' };
    const menuItemIconStyle = { marginRight: '8px' };

    const langMenu = {
        selectedKeys: [selectedLang],
        onClick: handleClick,
        items: defaultLangUConfigMap.map((localeObj) => ({
            key: localeObj.lang || localeObj.key,
            style: menuItemStyle,
            label: (
                <>
                    <span role="img" aria-label={localeObj?.label || 'en-US'} style={menuItemIconStyle}>
                        {localeObj?.icon || 'üåê'}
                    </span>
                    {localeObj?.label || 'en-US'}
                </>
            ),
        })),
    };

    // antd@5 Âíå  4.24 ‰πãÂêéÊé®Ëçê‰ΩøÁî® menuÔºåÊÄßËÉΩÊõ¥Â•Ω
    let dropdownProps;
    if (version.startsWith('5.') || version.startsWith('4.24.')) {
        dropdownProps = { menu: langMenu };
    } else if (version.startsWith('3.')) {
        dropdownProps = {
            overlay: (
                <Menu>
                    {langMenu.items.map((item: any) => (
                        <Menu.Item key={item.key} onClick={item.onClick}>
                            {item.label}
                        </Menu.Item>
                    ))}
                </Menu>
            ),
        };
    } else {
        // ÈúÄË¶Å antd 4.20.0 ‰ª•‰∏äÁâàÊú¨
        dropdownProps = { overlay: <Menu {...langMenu} /> };
    }

    return (
        <HeaderDropdown {...dropdownProps} {...restProps}>
            <div>{defaultLangUConfigMap.find((item) => item.lang === selectedLang)?.icon}</div>
        </HeaderDropdown>
    );
};
